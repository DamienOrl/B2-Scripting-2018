#!/bin/bash

### 8save
### Backup selected dir (default /home) to local or remote storage if available
### it4
### 2018-10-10

### Binaries
declare -r _tar=$(which tar 2> /dev/null) || { echo 'tar binary not found, exiting.' ; exit 2 ; }

### 

declare -r this_script_path=$(realpath "$0")

declare -r backed_up_dir='/home'
declare -r local_destination_dir='/opt'
declare -r backup_logfile='/tmp/backup.log'

log() {
  # Prints message to STDOUT and in $backup_logfile

  log_message=$1

  echo "${log_message}" | tee -a ${backup_logfile}

}

cleanupLocalDestinationDir() {
  # Only keep 5 newest .tar.gz files in $local_destination_dir

  # one-liner solutions
  # find /opt -type f -printf '%T+ %p\n' | sort  | head -n5 | awk '{print $2}' | xargs rm -f {} --
  # ls -alhdpt ${local_destination_dir}/* | tail -n +6 | awk '{print $NF}' | xargs rm -f {} --

  files_number=$(find ${local_destination_dir} -maxdepth 1 -type f -name '*tar.gz' | wc -l)

  if [[ $files_number -gt 5 ]] ; then
    oldest_files="$(find ${local_destination_dir} -maxdepth 1 -type f -name '*tar.gz'  -printf '%T+ %p\n' | sort | head -n -5 | awk '{print $NF}')"

    deleted_files_count=0
    for files in $oldest_files ; do
      rm "$files" -f &> /dev/null
      (( deleted_files_count++ ))
    done
  
    echo "  > CLEANUP : ${deleted_files_count} files were removed from ${local_destination_dir}."

  fi
}

backup() {
  # Actually issue the backup of $backed_up_dir in $local_destination_dir
  # Prefix with the $archive_name and suffix with a timestamp

  archive_name="home_backup_$(date +%y%m%d%H%M%S).tar.gz"
  
  log "$(date '+%y-%m-%d %H:%M:%S')"
  log "  > STARTING backup."

  backup_command="${_tar} -cvzf ${local_destination_dir}/${archive_name} ${backed_up_dir}"

  if $backup_command &> /dev/null ; then
    log "  > SUCCESSFUL backup ${backed_up_dir} successfully backed up in ${local_destination_dir}."

  else    
    log "  > FAILED backup."
    exit 1

  fi
}

addToCrontab() {
  # Add this script to crontab

  tmpfile=$(mktemp)
  echo "0 12 * * * root $this_script_path" > "$tmpfile"
  crontab "$tmpfile"
  rm "$tmpfile"
}

backup
cleanupLocalDestinationDir
addToCrontab
